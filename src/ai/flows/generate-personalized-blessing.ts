'use server';
/**
 * @fileOverview This file defines a Genkit flow for generating personalized blessing messages based on user input and the selected Murti.
 *
 * - generatePersonalizedBlessing - A function that takes user input and Murti details to generate a personalized blessing.
 * - GeneratePersonalizedBlessingInput - The input type for the generatePersonalizedBlessing function.
 * - GeneratePersonalizedBlessingOutput - The return type for the generatePersonalizedBlessing function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePersonalizedBlessingInputSchema = z.object({
  murtiName: z.string().describe('The name of the selected Murti.'),
  userIntention: z.string().describe('The user\u2019s personal intention or prayer request.'),
  userName: z.string().describe('The user\u2019s name.'),
});
export type GeneratePersonalizedBlessingInput = z.infer<typeof GeneratePersonalizedBlessingInputSchema>;

const GeneratePersonalizedBlessingOutputSchema = z.object({
  blessingMessage: z.string().describe('The personalized blessing message generated by the AI.'),
});
export type GeneratePersonalizedBlessingOutput = z.infer<typeof GeneratePersonalizedBlessingOutputSchema>;

export async function generatePersonalizedBlessing(input: GeneratePersonalizedBlessingInput): Promise<GeneratePersonalizedBlessingOutput> {
  return generatePersonalizedBlessingFlow(input);
}

const generatePersonalizedBlessingPrompt = ai.definePrompt({
  name: 'generatePersonalizedBlessingPrompt',
  input: {schema: GeneratePersonalizedBlessingInputSchema},
  output: {schema: GeneratePersonalizedBlessingOutputSchema},
  prompt: `You are a spiritual guide skilled in creating personalized blessings.

  Based on the selected Murti, the user's intention, and the user's name, generate a heartfelt and unique blessing message.

  Murti Name: {{{murtiName}}}
  User Intention: {{{userIntention}}}
  User Name: {{{userName}}}

  Blessing Message:`,
});

const generatePersonalizedBlessingFlow = ai.defineFlow(
  {
    name: 'generatePersonalizedBlessingFlow',
    inputSchema: GeneratePersonalizedBlessingInputSchema,
    outputSchema: GeneratePersonalizedBlessingOutputSchema,
  },
  async input => {
    const {output} = await generatePersonalizedBlessingPrompt(input);
    return output!;
  }
);
